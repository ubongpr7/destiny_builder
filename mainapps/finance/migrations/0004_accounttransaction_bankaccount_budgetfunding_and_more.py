# Generated by Django 5.2 on 2025-05-24 21:09

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0021_userprofile_is_department_head_department_and_more'),
        ('common', '0001_initial'),
        ('finance', '0003_remove_donationcampaign_current_amount'),
        ('project', '0008_alter_projectupdatemedia_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit (Money In)'), ('debit', 'Debit (Money Out)'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('currency_exchange', 'Currency Exchange')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('original_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Original amount before currency conversion', max_digits=12, null=True)),
                ('exchange_rate_used', models.DecimalField(blank=True, decimal_places=8, help_text='Exchange rate used for conversion', max_digits=15, null=True)),
                ('reference_number', models.CharField(max_length=100, unique=True)),
                ('bank_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_date', models.DateTimeField()),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('processor_fee', models.DecimalField(decimal_places=2, default=0, help_text='Fee charged by payment processor', max_digits=10)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount after processor fees', max_digits=12, null=True)),
                ('is_reconciled', models.BooleanField(default=False)),
                ('reconciled_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Account Transaction',
                'verbose_name_plural': 'Account Transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('account_number', models.CharField(max_length=50, unique=True)),
                ('account_type', models.CharField(choices=[('checking', 'Checking Account'), ('savings', 'Savings Account'), ('money_market', 'Money Market'), ('restricted', 'Restricted Fund Account'), ('project', 'Project-Specific Account'), ('grant', 'Grant-Specific Account'), ('emergency', 'Emergency Fund Account'), ('investment', 'Investment Account'), ('paypal', 'PayPal Account'), ('stripe', 'Stripe Account'), ('mobile_money', 'Mobile Money Account')], max_length=20)),
                ('purpose', models.TextField(help_text='What this account is used for')),
                ('is_restricted', models.BooleanField(default=False, help_text='Whether this account has usage restrictions')),
                ('restrictions', models.TextField(blank=True, help_text='Details of any restrictions on this account', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('opening_date', models.DateField()),
                ('closing_date', models.DateField(blank=True, null=True)),
                ('minimum_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BudgetFunding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_allocated', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('allocation_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Budget Funding',
                'verbose_name_plural': 'Budget Funding',
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=8, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('1E-8'))])),
                ('effective_date', models.DateTimeField()),
                ('source', models.CharField(help_text='Source of exchange rate (e.g., Central Bank, XE.com)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Exchange Rate',
                'verbose_name_plural': 'Exchange Rates',
                'ordering': ['-effective_date'],
            },
        ),
        migrations.CreateModel(
            name='FinancialInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('branch_name', models.CharField(blank=True, max_length=200, null=True)),
                ('branch_code', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Financial Institution',
                'verbose_name_plural': 'Financial Institutions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FundAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_allocated', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('allocation_date', models.DateTimeField()),
                ('purpose', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Fund Allocation',
                'verbose_name_plural': 'Fund Allocations',
                'ordering': ['-allocation_date'],
            },
        ),
        migrations.CreateModel(
            name='FundingSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('funding_type', models.CharField(choices=[('donation', 'General Donation'), ('campaign', 'Campaign'), ('grant', 'Grant'), ('internal', 'Internal Funds'), ('partnership', 'Partnership Funding'), ('government', 'Government Funding'), ('investment', 'Investment Returns')], max_length=20)),
                ('amount_available', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('amount_allocated', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Funding Source',
                'verbose_name_plural': 'Funding Sources',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='budget',
            options={'ordering': ['-created_at'], 'verbose_name': 'Budget', 'verbose_name_plural': 'Budgets'},
        ),
        migrations.AlterModelOptions(
            name='budgetitem',
            options={'ordering': ['category', 'subcategory'], 'verbose_name': 'Budget Item', 'verbose_name_plural': 'Budget Items'},
        ),
        migrations.AlterModelOptions(
            name='donation',
            options={'ordering': ['-donation_date'], 'verbose_name': 'Donation', 'verbose_name_plural': 'Donations'},
        ),
        migrations.AlterModelOptions(
            name='donationcampaign',
            options={'ordering': ['-created_at'], 'verbose_name': 'Donation Campaign', 'verbose_name_plural': 'Donation Campaigns'},
        ),
        migrations.AlterModelOptions(
            name='grant',
            options={'ordering': ['-created_at'], 'verbose_name': 'Grant', 'verbose_name_plural': 'Grants'},
        ),
        migrations.AlterModelOptions(
            name='grantreport',
            options={'ordering': ['-created_at'], 'verbose_name': 'Grant Report', 'verbose_name_plural': 'Grant Reports'},
        ),
        migrations.AlterModelOptions(
            name='inkinddonation',
            options={'ordering': ['-donation_date'], 'verbose_name': 'In-Kind Donation', 'verbose_name_plural': 'In-Kind Donations'},
        ),
        migrations.AlterModelOptions(
            name='organizationalexpense',
            options={'ordering': ['-expense_date'], 'verbose_name': 'Organizational Expense', 'verbose_name_plural': 'Organizational Expenses'},
        ),
        migrations.AlterModelOptions(
            name='recurringdonation',
            options={'ordering': ['-created_at'], 'verbose_name': 'Recurring Donation', 'verbose_name_plural': 'Recurring Donations'},
        ),
        migrations.RemoveField(
            model_name='budget',
            name='campaign',
        ),
        migrations.RemoveField(
            model_name='budget',
            name='grant',
        ),
        migrations.RemoveField(
            model_name='donation',
            name='donation_type',
        ),
        migrations.AddField(
            model_name='budget',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='budgets', to='common.currency'),
        ),
        migrations.AddField(
            model_name='budget',
            name='department',
            field=models.ForeignKey(blank=True, help_text='Required for departmental budgets', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='budgets', to='accounts.department'),
        ),
        migrations.AddField(
            model_name='budgetitem',
            name='approval_required_threshold',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Amount above which approval is required for expenses', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='budgetitem',
            name='is_locked',
            field=models.BooleanField(default=False, help_text='Prevent further spending on this item'),
        ),
        migrations.AddField(
            model_name='budgetitem',
            name='responsible_person',
            field=models.ForeignKey(blank=True, help_text='Person responsible for this budget line', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_budget_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='donation',
            name='bank_reference',
            field=models.CharField(blank=True, help_text="Bank's reference number for the deposit", max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='donation',
            name='converted_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Amount after currency conversion', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='donation',
            name='converted_currency',
            field=models.ForeignKey(blank=True, help_text='Currency after conversion', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='converted_donations', to='common.currency'),
        ),
        migrations.AddField(
            model_name='donation',
            name='currency',
            field=models.ForeignKey(blank=True, help_text='Currency of the donation', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='donations', to='common.currency'),
        ),
        migrations.AddField(
            model_name='donation',
            name='deposit_date',
            field=models.DateTimeField(blank=True, help_text='When the donation was actually deposited', null=True),
        ),
        migrations.AddField(
            model_name='donation',
            name='exchange_rate',
            field=models.DecimalField(decimal_places=8, default=1.0, help_text='Exchange rate used if currency conversion was needed', max_digits=15),
        ),
        migrations.AddField(
            model_name='donation',
            name='net_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Amount after processor fees', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='donation',
            name='processor_fee',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Fee charged by payment processor', max_digits=10),
        ),
        migrations.AddField(
            model_name='donation',
            name='processor_fee_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='processor_fee_donations', to='common.currency'),
        ),
        migrations.AddField(
            model_name='donationcampaign',
            name='target_currency',
            field=models.ForeignKey(blank=True, help_text='Currency for the target amount', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='common.currency'),
        ),
        migrations.AddField(
            model_name='grant',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='grants', to='common.currency'),
        ),
        migrations.AddField(
            model_name='grant',
            name='disbursement_schedule',
            field=models.TextField(blank=True, help_text='Schedule of when grant funds will be received', null=True),
        ),
        migrations.AddField(
            model_name='inkinddonation',
            name='valuation_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='in_kind_donations', to='common.currency'),
        ),
        migrations.AddField(
            model_name='organizationalexpense',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='organizational_expenses', to='common.currency'),
        ),
        migrations.AddField(
            model_name='recurringdonation',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='recurring_donations', to='common.currency'),
        ),
        migrations.AlterField(
            model_name='budget',
            name='budget_type',
            field=models.CharField(choices=[('project', 'Project'), ('organizational', 'Organizational'), ('departmental', 'Departmental'), ('program', 'Program'), ('emergency', 'Emergency Response'), ('capacity_building', 'Capacity Building'), ('advocacy', 'Advocacy & Policy'), ('research', 'Research & Development'), ('partnership', 'Partnership'), ('event', 'Event'), ('maintenance', 'Maintenance & Operations'), ('contingency', 'Contingency')], max_length=20),
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='budgeted_amount',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='spent_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='donation',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=16, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='donation',
            name='donation_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='donation',
            name='payment_method',
            field=models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal'), ('stripe', 'Stripe'), ('cash', 'Cash'), ('check', 'Check'), ('mobile_money', 'Mobile Money'), ('cryptocurrency', 'Cryptocurrency'), ('other', 'Other')], max_length=20),
        ),
        migrations.AlterField(
            model_name='grant',
            name='grantor_type',
            field=models.CharField(choices=[('government', 'Government'), ('foundation', 'Foundation'), ('corporate', 'Corporate'), ('individual', 'Individual'), ('multilateral', 'Multilateral Organization'), ('other', 'Other')], default='foundation', max_length=20),
        ),
        migrations.AlterField(
            model_name='inkinddonation',
            name='estimated_value',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='organizationalexpense',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='recurringdonation',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AddIndex(
            model_name='budgetitem',
            index=models.Index(fields=['responsible_person'], name='finance_bud_respons_34ec05_idx'),
        ),
        migrations.AddIndex(
            model_name='donationcampaign',
            index=models.Index(fields=['target_currency'], name='finance_don_target__5948d5_idx'),
        ),
        migrations.AddIndex(
            model_name='inkinddonation',
            index=models.Index(fields=['valuation_currency'], name='finance_ink_valuati_b69bde_idx'),
        ),
        migrations.AddIndex(
            model_name='organizationalexpense',
            index=models.Index(fields=['currency', 'expense_date'], name='finance_org_currenc_c45784_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringdonation',
            index=models.Index(fields=['currency', 'status'], name='finance_rec_currenc_b02025_idx'),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='authorized_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='authorized_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='donation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_transactions', to='finance.donation'),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='expense',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_transactions', to='finance.organizationalexpense'),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='grant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_transactions', to='finance.grant'),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='original_currency',
            field=models.ForeignKey(blank=True, help_text='Original currency before conversion', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='original_transactions', to='common.currency'),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='reconciled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconciled_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_accounts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bank_accounts', to='common.currency'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='primary_signatory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primary_accounts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='secondary_signatories',
            field=models.ManyToManyField(blank=True, help_text='Additional people who can authorize transactions', related_name='secondary_accounts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='finance.bankaccount'),
        ),
        migrations.AddField(
            model_name='accounttransaction',
            name='transfer_to_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_transfers', to='finance.bankaccount'),
        ),
        migrations.AddField(
            model_name='donation',
            name='deposited_to_account',
            field=models.ForeignKey(blank=True, help_text='Bank account where this donation was deposited', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donations', to='finance.bankaccount'),
        ),
        migrations.AddField(
            model_name='grant',
            name='designated_account',
            field=models.ForeignKey(blank=True, help_text='Specific account designated for this grant', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grants', to='finance.bankaccount'),
        ),
        migrations.AddIndex(
            model_name='donation',
            index=models.Index(fields=['currency', 'donation_date'], name='finance_don_currenc_65a360_idx'),
        ),
        migrations.AddIndex(
            model_name='grant',
            index=models.Index(fields=['currency', 'status'], name='finance_gra_currenc_39fd89_idx'),
        ),
        migrations.AddField(
            model_name='budgetfunding',
            name='budget',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_funding', to='finance.budget'),
        ),
        migrations.AddField(
            model_name='exchangerate',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_exchange_rates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exchangerate',
            name='from_currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_rates_from', to='common.currency'),
        ),
        migrations.AddField(
            model_name='exchangerate',
            name='to_currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_rates_to', to='common.currency'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='financial_institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='finance.financialinstitution'),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='allocated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fund_allocations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_allocations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='budget',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fund_allocations', to='finance.budget'),
        ),
        migrations.AddField(
            model_name='fundallocation',
            name='source_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fund_allocations', to='finance.bankaccount'),
        ),
        migrations.AddField(
            model_name='fundingsource',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='funding_sources', to='finance.donationcampaign'),
        ),
        migrations.AddField(
            model_name='fundingsource',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='funding_sources', to='common.currency'),
        ),
        migrations.AddField(
            model_name='fundingsource',
            name='donation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='funding_sources', to='finance.donation'),
        ),
        migrations.AddField(
            model_name='fundingsource',
            name='grant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='funding_sources', to='finance.grant'),
        ),
        migrations.AddField(
            model_name='budgetfunding',
            name='funding_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.fundingsource'),
        ),
        migrations.AddField(
            model_name='budget',
            name='funding_sources',
            field=models.ManyToManyField(related_name='budgets', through='finance.BudgetFunding', to='finance.fundingsource'),
        ),
        migrations.AddIndex(
            model_name='budget',
            index=models.Index(fields=['department', 'status'], name='finance_bud_departm_683f11_idx'),
        ),
        migrations.AddIndex(
            model_name='budget',
            index=models.Index(fields=['currency', 'status'], name='finance_bud_currenc_b4c199_idx'),
        ),
        migrations.AddIndex(
            model_name='accounttransaction',
            index=models.Index(fields=['account', 'transaction_date'], name='finance_acc_account_cf8ae3_idx'),
        ),
        migrations.AddIndex(
            model_name='accounttransaction',
            index=models.Index(fields=['status', 'transaction_date'], name='finance_acc_status_e933b9_idx'),
        ),
        migrations.AddIndex(
            model_name='accounttransaction',
            index=models.Index(fields=['original_currency', 'transaction_date'], name='finance_acc_origina_90526f_idx'),
        ),
        migrations.AddIndex(
            model_name='accounttransaction',
            index=models.Index(fields=['is_reconciled'], name='finance_acc_is_reco_baaefd_idx'),
        ),
        migrations.AddIndex(
            model_name='exchangerate',
            index=models.Index(fields=['from_currency', 'to_currency', 'effective_date'], name='finance_exc_from_cu_43725d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='exchangerate',
            unique_together={('from_currency', 'to_currency', 'effective_date')},
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['account_type', 'is_active'], name='finance_ban_account_622d35_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['financial_institution', 'is_active'], name='finance_ban_financi_da7627_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['currency', 'is_active'], name='finance_ban_currenc_062732_idx'),
        ),
        migrations.AddIndex(
            model_name='fundingsource',
            index=models.Index(fields=['funding_type', 'is_active'], name='finance_fun_funding_7c6f16_idx'),
        ),
        migrations.AddIndex(
            model_name='fundingsource',
            index=models.Index(fields=['currency', 'is_active'], name='finance_fun_currenc_a1268f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='budgetfunding',
            unique_together={('budget', 'funding_source')},
        ),
    ]
