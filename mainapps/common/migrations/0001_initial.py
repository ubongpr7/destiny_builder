# Generated by Django 5.2 on 2025-04-28 03:05

import django.core.validators
import django.db.models.deletion
import mainapps.common.models
import mainapps.common.validators
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apt_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Apartment number')),
                ('street_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Street number')),
                ('street', models.CharField(max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='Postal code', max_length=10, null=True, validators=[mainapps.common.validators.validate_postal_code], verbose_name='Postal code')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.city', verbose_name='City/Town')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.country', verbose_name='Country')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.region', verbose_name='Region/State')),
                ('subregion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.subregion', verbose_name='Sub region/LGA')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('file', models.FileField(blank=True, null=True, upload_to=mainapps.common.models.attachment_upload_path)),
                ('file_type', models.CharField(choices=[('IMAGE', 'Image'), ('DOC', 'Document'), ('OTHER', 'Other')], max_length=20)),
                ('purpose', models.CharField(choices=[('MAIN_IMAGE', 'Main Product Image'), ('GALLERY', 'Gallery Image'), ('MANUAL', 'Product Manual'), ('SPEC', 'Specification Sheet')], default='GALLERY', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
                'ordering': ['-is_primary', 'uploaded_at'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='common_atta_content_060193_idx')],
            },
        ),
        migrations.CreateModel(
            name='TypeOf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='It must be unique', max_length=200, verbose_name='Type')),
                ('which_model', models.CharField(choices=[('inventory', 'Inventory'), ('stock_item', 'Stock item'), ('company', 'Company'), ('policy', 'Policy'), ('industry', 'Industry')], max_length=30)),
                ('slug', models.SlugField(editable=False, max_length=230)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='common.typeof')),
            ],
            options={
                'verbose_name_plural': 'Types of Instances',
                'constraints': [models.UniqueConstraint(fields=('name', 'which_model'), name='unique_type_name_which_model')],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension_type', models.CharField(choices=[('mass', 'Mass'), ('volume', 'Volume'), ('length', 'Length'), ('piece', 'Piece'), ('time', 'Time'), ('custom', 'Custom')], default='custom', help_text='Type of measurement this unit belongs to', max_length=50, verbose_name='Dimension Category')),
                ('name', models.CharField(help_text='Full name of the unit (e.g., Kilogram)', max_length=255, verbose_name='Unit Name')),
                ('abbreviated_name', models.CharField(help_text='Standard short form (e.g., kg, L, m)', max_length=10, null=True, validators=[django.core.validators.RegexValidator(code='invalid_abbreviation', message='Abbreviation can only contain letters', regex='^[A-Za-z]+$')], verbose_name='Abbreviation')),
                ('conversion_factor', models.DecimalField(decimal_places=8, default=1.0, help_text='Conversion factor to base unit', max_digits=30)),
                ('base_unit', models.ForeignKey(blank=True, help_text='Reference to base unit for conversions', null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.unit', verbose_name='Base Unit')),
            ],
            options={
                'ordering': ['id'],
                'indexes': [models.Index(fields=['dimension_type', 'name'], name='common_unit_dimensi_534886_idx'), models.Index(fields=['abbreviated_name'], name='common_unit_abbrevi_187618_idx')],
                'constraints': [models.UniqueConstraint(fields=('dimension_type', 'name'), name='unique_unit_per_dimension'), models.UniqueConstraint(fields=('abbreviated_name', 'dimension_type'), name='unique_abbreviation_per_dimension')],
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.attribute')),
            ],
            options={
                'unique_together': {('attribute', 'value')},
            },
        ),
    ]
