# Generated by Django 5.2 on 2025-04-28 03:05

import django.contrib.auth.validators
import django.utils.timezone
import mainapps.inventory.helpers.field_validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=60, null=True)),
                ('picture', models.ImageField(default='default.png', null=True, upload_to='profile_pictures/%y/%m/%d/')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('sex', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], default='not_to_mention', max_length=20, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_worker', models.BooleanField(default=False, editable=False)),
                ('is_main', models.BooleanField(default=False, editable=False)),
                ('date_of_birth', models.DateField(blank=True, help_text='You must be above 18 years of age.', null=True, validators=[mainapps.inventory.helpers.field_validators.adult_validator], verbose_name='Date Of Birth')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_kyc_verified', models.BooleanField(default=False)),
                ('id_document_type', models.CharField(blank=True, max_length=50, null=True)),
                ('id_document_number', models.CharField(blank=True, max_length=50, null=True)),
                ('id_document_image_front', models.ImageField(blank=True, null=True, upload_to='kyc_documents/')),
                ('id_document_image_back', models.ImageField(blank=True, null=True, upload_to='kyc_documents/')),
                ('selfie_image', models.ImageField(blank=True, null=True, upload_to='kyc_documents/')),
                ('kyc_submission_date', models.DateTimeField(blank=True, null=True)),
                ('kyc_verification_date', models.DateTimeField(blank=True, null=True)),
                ('kyc_rejection_reason', models.TextField(blank=True, null=True)),
                ('is_project_manager', models.BooleanField(default=False)),
                ('is_donor', models.BooleanField(default=False)),
                ('is_volunteer', models.BooleanField(default=False)),
                ('is_partner', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=6)),
                ('slug', models.SlugField(blank=True, editable=False)),
                ('time_requested', models.DateTimeField(auto_now=True)),
                ('successful_attempts', models.IntegerField(default=0)),
                ('total_attempts', models.IntegerField(default=0)),
            ],
            options={
                'permissions': (('code', 'message'), ('can_copy_code', 'Can copy code'), ('can_share_code', 'Can share code')),
            },
        ),
    ]
